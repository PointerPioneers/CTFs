import math
import sympy

def string_to_int(s):
    return int.from_bytes(s.encode(), byteorder='little')

def int_to_string(i):
    length = math.ceil(i.bit_length() / 8)
    return i.to_bytes(length, byteorder='little').decode()

def double_rsa(message):
    e1 = 31
    e2 = 71
    p = sympy.randprime(2**511, 2**512)
    q = sympy.randprime(2**511, 2**512)
    n = p*q
    phi_n = (p-1)*(q-1)

    while ((math.gcd(phi_n, e1) != 1) or (math.gcd(phi_n, e2) != 1)):
        p = sympy.randprime(2**511, 2**512)
        q = sympy.randprime(2**511, 2**512)
        n = p*q
        phi_n = (p-1)*(q-1)

    d1 = pow(e1, -1, phi_n)
    d2 = pow(e2, -1, phi_n)
    encrypted_message1 = pow(string_to_int(message), e1, n)
    encrypted_message2 = pow(string_to_int(message), e2, n)
    return n, encrypted_message1, encrypted_message2

#n = 61162475645725945124127386741371502678427693621853483502079181883922445513952721282871968221782884968588214908205235428024403404505317752708541610493789993251044119931833781393148038517246980788659381013862448276752444944969839629628005030008161927993018283366322406702545864465694421011775696384806160129243
#Encrypted message 1 = 57618136551336762735474631525413042327878722585853571147016456701391784644725221448618557317330011383211158297637797841132416571894049620130283495171343124403404584766031362198361811008420787018145523956497597139993044642586295619246596919331991367672953873640662942925277006369508283175861361475417046328294
#Encrypted message 2 = 51220953427745547701142109245566285385047517203527014933558424988278999088303818329096046334203228044507225446995169304246481290420163323537252889467557029901572545535989164528631304462087927895787008559162007317809984160427200778251691246940615002842030300940350609505315958449342903179682943675691187815817
